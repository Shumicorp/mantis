apiVersion : apps/v1
kind: Deployment
metadata:
  name: db-postgres
  labels:
    app: db-postgres
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: db
    project: demo4
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/component: db
      project: demo4
  template:
    metadata:
      labels:
        project: demo4
        app.kubernetes.io/name: postgres
        app.kubernetes.io/component: db
    spec:
      containers:
        - name: db-postgres
          image: public.ecr.aws/u1z6d6v5/mantis-db:latest
          env:
           - name: PGDATA
             value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pv-claim


---
apiVersion: v1
kind: Service
metadata:
  name: db-postgres
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: db
    project: demo4
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: db
    project: demo4

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-data
  labels:
    type: local
spec:
  storageClassName: local-storage
  capacity:
    storage: 5Gi
  local:
    path: /data/postgres
  persistentVolumeReclaimPolicy: Retain
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
          - key: app
            operator: In
            values:
              - db-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgres-pv-claim
  name: postgres-pv-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion : apps/v1
kind: Deployment
metadata:
  name: my-app
  labels:
    app: my-app
spec:
  selector:
    matchLabels:
      project: demo4
  template:
    metadata:
      labels:
        project: demo4
    spec:
      containers:
        - name: app-php
          image: public.ecr.aws/u1z6d6v5/mantis:latest

          imagePullPolicy: Always

          ports:
            - containerPort: 5432
            - containerPort: 80
      imagePullSecrets:
        - name: myregistrykey


---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: my-autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v2beta1v1
    kind: Deployment
    name: my-app
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 70
  - type: Resource
    resource:
      name: memory
      targetAverageUtilization: 80
---
apiVersion: v1
kind: Service
metadata:
  name: balanser
  labels:
    project: demo4
spec:
  selector:
    project: demo4    # Selecting PODs with those Labels
  ports:
    - name      : app-listener
      protocol  : TCP
      port      : 80  # Port on Load Balancer
      targetPort: 80  # Port on Pod
  type: LoadBalancer
